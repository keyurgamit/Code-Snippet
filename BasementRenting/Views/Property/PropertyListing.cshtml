@model List<EntityModel.DomainModel.Property>

@{
    //string CityName = Request.Cookies["CurrentLocation"].Value;
    string CityName = Session["CurrentLocation"].ToString();
    int TotalPages = 0;
}

<div class="property-listing-page propertlistingpg">
    <div class="breadcrumb">
        <div class="container">
            <div class="breadcrumb-item active">
                @*@if (ViewBag.SearchByCityName != null)
                    {
                        <span>Search result for : @ViewBag.SearchByCityName</span>
                    }
                    else
                    {
                        if (CityName != null)
                        {
                            <span>Search result for : @CityName</span>
                        }
                    }*@

                @if (CityName != null)
                {
                    <span>Search result for : @CityName</span>
                }

                @*<form action="@Url.Action("properties-by-city", "property")" method="post">*@
                <div class="changeslocationprn" data-toggleswitch="2" style="display:none;">
                    <div class="goorcanceltogglediv">
                        <div class="texboxp">
                            <input placeholder="Enter City..." id="txtCityName" name="txtCityName" class="form-textbox" autocomplete="off">
                            <input type="hidden" id="hiddenSelectedCityId" />
                            <ul class="bind-city-list"></ul>
                        </div>
                        <div class="btn_prn">
                            @*<button class="btn-go btn btn-outline" id="SearchPropertiesByMatchingCityName">Go</button>*@
                            @*<button type="submit" class="btn-go btn btn-outline" id="SearchPropertiesByMatchingCityName">Go</button>*@
                            
                            <button class="btn-go btn btn-outline" id="SearchPropertiesByCityId">Go</button>
                            <button class="btn-cancel btn btn-outline" data-toggleswitch="3" id="ClearCityListSuggestion"> Cancel</button>
                        </div>
                    </div>
                </div>
                @*</form>*@

                <button type="button" class="btn btn-outline btn-change-location" data-toggleswitch="1"><i class="iicon basement-renting-location"></i> Change Location </button>
            </div>
        </div>
    </div>

    <section class="secton_middle_containt">
        <div class="container">
            <div class="row">
                <div class="col-md-12 col-lg-3 search-rentals-sidebar search-rentals">
                    <div class="card">
                        <div class="card-header">
                            Search Rentals
                        </div>

                        <div class="card-body">
                            @Html.Action("searchpropertyform", "property")
                        </div>
                    </div>
                </div>

                <div class="col-md-12 col-lg-9 product-wrapper-containt">
                    @using (Html.BeginForm("sortproperties", "property", FormMethod.Post, new { id = "ProperyListingPage" }))
                    {
                        <input type="hidden" id="hiddenCityId" name="hiddenCityId" value="@ViewBag.CityId" />
                        <input type="hidden" id="hiddenCityName" name="hiddenCityName" value="@ViewBag.CityName" />
                        <input type="hidden" id="hiddenSortBy" name="hiddenSortBy" value="@ViewBag.sortby" />
                        <input type="hidden" id="hiddenPageIndex" name="hiddenPageIndex" value="@ViewBag.pageindex" />

                        if (Model.Count > 0)
                        {
                            TotalPages = Model.FirstOrDefault().TotalPages;

                            <div class="recordheader_result">
                                <div class="showrantal_prn">
                                    <span>Showing Rentals @Model.FirstOrDefault().ROWNUMBER - @Model.LastOrDefault().ROWNUMBER of @Model.FirstOrDefault().TotalRecords Result(s)</span>
                                </div>
                                @if (ViewBag.SortingOptions != null)
                                {
                                    <ul class="sort_prn">
                                        <li><b> Sort By:</b></li>
                                        <li> @Html.DropDownList("PropertySorting", new SelectList(ViewBag.SortingOptions, "Value", "Text"), new { @class = "form-control", @id = "PropertySorting" }) </li>
                                    </ul>
                                }
                            </div>

                            <div class="property-listing  listing_box_wraper">
                                @Html.Partial("_PropertyBox", Model)
                            </div>

                            if (TotalPages > 1)
                            {
                                <div>
                                    <ul class="pagination">
                                        <li class="page-item previous"><a class="page-link"><i class="zmdi zmdi-chevron-left"></i><span class="go-to-page"></span></a></li>
                                        @for (int i = 1; i <= TotalPages; i++)
                                        {
                                            <li class="page-item"><a class="page-link go-to-page pglink_@i" href="javascript:void(0)"><span>@i</span></a></li>
                                        }
                                        <li class="page-item next"><a class="page-link"><i class="zmdi zmdi-chevron-right"></i></a></li>
                                    </ul>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-sm-12">
                                <div class="alert alert-info">
                                    <span> No Rentals Found </span>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </section>
</div>

<script>
    $(document).ready(function () {
        //if (GetQueryStringValue('city') !== undefined) {
        //    $("#BreadcrumbSearchedValue").val(GetQueryStringValue('city').toString());
        //}

        $('.top-footer').addClass('border');
        $('.page-item .page-link').removeClass('active');
        $('.pglink_' + $("#hiddenPageIndex").val()).addClass('active');
        /*----------------------------*/
        var CurrentPageIndex02 = parseInt(GetQueryStringValue('pageindex'));
        if (CurrentPageIndex02 >= 2) {
            $(".page-item.previous").removeClass('disable');
        }
        else {
            $(".page-item.previous").addClass('disable');
        }

        var CurrentPageIndex02 = parseInt(GetQueryStringValue('pageindex'));
        if (CurrentPageIndex02 != (@TotalPages)){
            $(".page-item.next").removeClass('disable');
        }
        else {
            $(".page-item.next").addClass('disable');
        }
        /*----------------------------*/

        $("#PropertySorting").val(GetQueryStringValue('sortby'));
        var PageIndex = GetQueryStringValue('pageindex');

        //start - to blank the value if it's zero
        if ($("#FromPrice").val() == 0) {
            $("#FromPrice").val('');
        }
        if ($("#ToPrice").val() == 0) {
            $("#ToPrice").val('');
        }
        if ($("#DistanceFromSchool").val() == 0) {
            $("#DistanceFromSchool").val('');
        }
        //end - to blank the value if it's zero

        //start - sort by
        $("#PropertySorting").change(function () {
            $("#hiddenSortBy").val($("#PropertySorting").val());
            $("#hiddenPageIndex").val(1);

            $("#ProperyListingPage").submit();
        });
        //end - sort by

        //start - go to specific page
        $(".go-to-page").click(function () {
            var pageindex = $(this).children('span').html();

            $("#hiddenPageIndex").val(pageindex);
            $("#ProperyListingPage").submit();
        });
        //end - go to specific page

        //start - go to previous
        $(".page-item.previous").click(function () {
            var CurrentPageIndex = parseInt(GetQueryStringValue('pageindex'));
            if (CurrentPageIndex >= 2) {
                $(".page-item.previous").removeClass('disable');
                $("#hiddenPageIndex").val(parseInt(CurrentPageIndex) - 1);
                $("#ProperyListingPage").submit();
            }
            else {
                $(".page-item.previous").addClass('disable');
            }
        });
        //end - go to previous

        //start - go to next
        $(".page-item.next").click(function () {
            var CurrentPageIndex = parseInt(GetQueryStringValue('pageindex'));
            if (CurrentPageIndex != (@TotalPages))
            {
                $(".page-item.next").removeClass('disable');
                $("#hiddenPageIndex").val(parseInt(CurrentPageIndex) + 1);
                $("#ProperyListingPage").submit();
            }
            else {
                $(".page-item.next").addClass('disable');
            }
        });
        //end - go to next


        /*-------------------------------------*/
        $('[data-toggleswitch="1"]').click(function(e) {
            $('[data-toggleswitch="2"]').show();
            $('[data-toggleswitch="1"]').hide();
        });
        $('[data-toggleswitch="3"]').click(function(e) {
            $('[data-toggleswitch="2"]').hide();
            $('[data-toggleswitch="1"]').show();
        });
        /*-----------------------------------------*/

        $("#txtCityName").keyup(function () {
            if ($("#txtCityName").val().length > 2) {
                $.ajax({
		            url: "@Url.Action("cities-by-name", "region")",
		            type: "POST",
                    data: { 'CityName': $("#txtCityName").val() },
		            async: false,
                    success: function (data) {
                        if (data.CitylistStatus == true) {
                            $('.bind-city-list').empty();

                            $.each(data.CityList, function () {
                                var html = '<li class="city-list" data-cityid=' + this.Id + '>' + this.Name + '</li>';
                                $('.bind-city-list').append(html);
                            });
                       }
		            },
		            error: function () {
			            console.log("Error Occured!");
		            }
	            });//end - ajax call
            }
            else {
                $('.bind-city-list').empty();
            }
        });

        $("#ClearCityListSuggestion").click(function () {
            $('.bind-city-list').empty();
        });

        $(document).on('click', '.city-list', function () {
            var SelectedCityId = $(this).attr("data-cityid");

            if (SelectedCityId !== undefined) {
                @*$.ajax({
		            url: "@Url.Action("change-location", "property")",
		            type: "POST",
                    data: { 'CityId': SelectedCityId },
		            async: false,
		            //dataType: "json",
		            //traditional: true,
		            //contentType: "application/json; charset=utf-8",
		            success: function (data) {
		            },
		            error: function () {
			            console.log("Error Occured!");
		            }
	            });//end - ajax call*@

                $("#txtCityName").val($(this).text());
                $("#hiddenSelectedCityId").val(SelectedCityId);
                $('.bind-city-list').empty();
            }
        });

        //start - change location
        $("#SearchPropertiesByCityId").click(function () {
            var CurrentUrl = $(location).attr('href');
            var NewUrl = CurrentUrl.replace('cityId=' + GetQueryStringValue('cityId'), 'cityId=' + $("#hiddenSelectedCityId").val()).replace('city=' + GetQueryStringValue('city'), 'city=' + $("#txtCityName").val().toLowerCase()).replace('pageindex=' + GetQueryStringValue('pageindex'), 'pageindex=1');

            //console.log(NewUrl);
            location.href = NewUrl;
        });
        //end - change location

    }); //end of doc ready

    function GetQueryStringValue(param) {
        var url = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < url.length; i++) {
            var urlparam = url[i].split('=');
            if (urlparam[0] == param) {
                return urlparam[1];
            }
        }
    }
</script>