@model List<EntityModel.DomainModel.Property>

@{
    int TotalPages = 0;
    int CurrentPageIndex = Convert.ToInt32(Convert.ToString(ViewBag.CurrentPageIndex).Trim());
}

<div class="manageproperty-page">
    <div class="breadcrumb">
        <div class="container">
            <div class="breadcrumb-item active">Property Management</div>
        </div>
    </div>
    <section class="secton_middle_containt">
        <div class="container">
            <div class="row">
                <div class="myaccount_sidebar">
                    @Html.Partial("_MyProfileMenu")
                </div>
                <div class="myaccount_containt">
                    <div class="card">
                        <div class="card-header">
                            Property Management
                        </div>
                        <div class="card-body">
                            <div class="user-type">
                                <div class="filter-properties-bylandlord">

                                    @using (Html.BeginForm("filter-properties", "admin", FormMethod.Post, new { @Id = "FilterProperties" }))
                                    {
                                        <div class="row">
                                            @if (ViewBag.lstLandlord != null)
                                            {
                                                <div class="col-lg-6">@Html.DropDownList("lstLandlord", @ViewBag.lstLandlord as SelectList, new { @class = "form-control" }) </div>
                                            }
                                            @if (ViewBag.lstIsApprvoved != null)
                                            {
                                                <div class="col-lg-6">@Html.DropDownList("lstIsApprvoved", @ViewBag.lstIsApprvoved as SelectList, new { @class = "form-control" })</div>
                                            }

                                            <input type="hidden" id="hiddenPageIndex" name="hiddenPageIndex" value="@CurrentPageIndex" />
                                        </div>
                                    }

                                </div>
                            </div>

                            @if (Model.Count > 0)
                            {
                                TotalPages = Model.FirstOrDefault().TotalPages;
                                <br />
                                <div class="product-wrapper-containt">
                                    <div class="property-listing  listing_box_wraper">
                                        @Html.Partial("~/views/admin/shared/_propertybox.cshtml", Model)
                                    </div>
                                </div>

                                if (TotalPages > 1)
                                {
                                    <div class="property-pagination">
                                        <ul class="pagination">
                                            <li class="page-item previous"><a class="page-link"><i class="zmdi zmdi-chevron-left"></i><span class="go-to-page"></span></a></li>
                                            @for (int i = 1; i <= TotalPages; i++)
                                            {
                                                <li class="page-item"><a class="page-link go-to-page pglink_@i" href="javascript:void(0)"><span>@i</span></a></li>
                                            }
                                            <li class="page-item next"><a class="page-link"><i class="zmdi zmdi-chevron-right"></i></a></li>
                                        </ul>
                                    </div>
                                }
                            }
                            else
                            {
                                <br />
                                <div class="col-sm-12">
                                    <div class="alert alert-info">
                                        <span> No Rentals Found </span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<script>
    $(function () {
        $('.top-footer').addClass('border');
        $('.li_manageproperties').addClass('current');

        if ($('.myaccount_sidebar ul').length) {
            $('.myaccount_sidebar').addClass('col-lg-3');
            $('.myaccount_containt').addClass('col-lg-9');
        }
        else { $('.myaccount_containt').addClass('col-lg-12'); }
    });

    $(document).ready(function () {
        //start - filterting
        $("#lstLandlord").change(function () {
            $("#hiddenPageIndex").val(1);
            $("#FilterProperties").submit();
        });
        $("#lstIsApprvoved").change(function () {
            $("#FilterProperties").submit();
        });
        //end - filterting

        $('.page-item .page-link').removeClass('active');
        $('.pglink_' + $("#hiddenPageIndex").val()).addClass('active');
        if (@CurrentPageIndex >= 2) {
            $(".page-item.previous").removeClass('disable');
        }
        else {
            $(".page-item.previous").addClass('disable');
        }

        if (@CurrentPageIndex != (@TotalPages)) {
            $(".page-item.next").removeClass('disable');
        }
        else {
            $(".page-item.next").addClass('disable');
        }

        //start - go to page
        $(".go-to-page").click(function () {
            var pageindex = $(this).children('span').html();

            $("#hiddenPageIndex").val(pageindex);
            $("#FilterProperties").submit();
        });
        //end - go to page

        //start - go to previous
        $(".page-item.previous").click(function () {
            if (@CurrentPageIndex >= 2) {
                $(".page-item.previous").removeClass('disable');
                $("#hiddenPageIndex").val(parseInt(@CurrentPageIndex) - 1);
                $("#FilterProperties").submit();
            }
            else {
                $(".page-item.previous").addClass('disable');
            }
        });
        //end - go to previous

        //start - go to next
        $(".page-item.next").click(function () {
            if (@CurrentPageIndex != (@TotalPages))
            {
                $(".page-item.next").removeClass('disable');
                $("#hiddenPageIndex").val(parseInt(@CurrentPageIndex) + 1);
                $("#FilterProperties").submit();
            }
            else {
                $(".page-item.next").addClass('disable');
            }
        });
        //end - go to next
    }); //end of doc ready

    function GetQueryStringValue(param) {
        var url = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < url.length; i++) {
            var urlparam = url[i].split('=');
            if (urlparam[0] == param) {
                return urlparam[1];
            }
        }
    }
</script>